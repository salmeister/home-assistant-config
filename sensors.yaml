  - platform: systemmonitor
    resources:
      - type: last_boot
  - platform: history_stats
    name: "replay_foyer_light"
    entity_id: light.foyer
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_counter_lights"
    entity_id: switch.counter_lights
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_cabinet_lights"
    entity_id: switch.cabinet_lights
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_table_light"
    entity_id: switch.table_light
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_island_lights"
    entity_id: switch.island_lights
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_front_lights"
    entity_id: switch.front_lights
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_porch_door_light"
    entity_id: switch.porch_door_light
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_family_room_lights"
    entity_id: switch.family_room_lights
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_porch_light"
    entity_id: light.porch
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: history_stats
    name: "replay_garage_lights"
    entity_id: switch.garage_lights
    state: "on"
    type: count
    start: >
      {{ as_timestamp(now()) - (7*86400) }}
    duration: 00:00:30
  - platform: template
    sensors:
      next_alarm:
        friendly_name: 'Next Alarm'
        value_template: >-
            {% if is_state('device_tracker.salmob1', 'home') %}
              {% if is_state('device_tracker.salmob2', 'home') %}
                {{ [states('sensor.salmob1_next_alarm'), states('sensor.salmob2_next_alarm')] | min }}
              {% else %}
                {{ states('sensor.salmob1_next_alarm') }}
              {% endif %}
            {% elif is_state('device_tracker.salmob2', 'home') %}
                {{ states('sensor.salmob2_next_alarm') }}
            {% else %}
              'No one home'
            {% endif %}
        attribute_templates:
          alarm_time: >-
            {{ as_timestamp(states('sensor.next_alarm')) | timestamp_custom('%H:%M') }}
          minutes_left: >-
            {% set dummy = states("sensor.time") %}
            {{((states('sensor.next_alarm')|as_timestamp|int - now()|as_timestamp|int)/60)|int}}
          text_time_left: >-
            {% set time = state_attr('sensor.next_alarm','minutes_left') %}
            {% set hours = ((time | int /  60) | string).split('.')[0] %}
            {% set minutes = time | int % 60 %}
            {{hours}} hours {{minutes}} minutes 
          text_whose_alarm: >-
            {% if states('sensor.salmob1_next_alarm') == states('sensor.salmob2_next_alarm') %}
              Same alarm
            {% elif ((states('sensor.next_alarm')|as_timestamp|int - now()|as_timestamp|int)/60)|int == ((states('sensor.salmob1_next_alarm')|as_timestamp|int - now()|as_timestamp|int)/60)|int %}
              Andy's Phone
            {% elif ((states('sensor.next_alarm')|as_timestamp|int - now()|as_timestamp|int)/60)|int == ((states('sensor.salmob2_next_alarm')|as_timestamp|int - now()|as_timestamp|int)/60)|int %}
              Katie's Phone
            {% else %}
              ERROR
            {% endif %}
          next_alarm_localtime: >-
            {{ as_timestamp(states('sensor.next_alarm')) | timestamp_custom('%A %H:%M') }}
        
  - platform: template
    sensors:
      outdoor_temp:
        value_template: '{{ states.weather.kfcm_daynight.attributes.temperature }}'
        unit_of_measurement: °F
        icon_template: mdi:thermometer
        friendly_name: 'Outdoor Temp'

  - platform: template
    sensors:
      main_temp_offset:
        value_template: "{{ (states('sensor.laundry_water_leak_air_temperature') | float + 3) | round(1) }}"
        unit_of_measurement: °F
        icon_template: mdi:thermometer
        friendly_name: 'Main Temp'

  - platform: template
    sensors:
      basement_temp_offset:
        value_template: "{{ (states('sensor.basement_leak_air_temperature') | float + 3) | round(1) }}"
        unit_of_measurement: °F
        icon_template: mdi:thermometer
        friendly_name: 'Basement Temp'

  - platform: template
    sensors:
      front_closet_door_battery:
        friendly_name: 'Closet Door Battery'
        value_template: '{{ states.binary_sensor.front_closet_door.attributes.battery_level }}'
        unit_of_measurement: '%'

  - platform: template
    sensors:
      dog_food_battery:
        friendly_name: 'Dog Food Battery'
        value_template: '{{ states.binary_sensor.dog_food.attributes.battery_level }}'
        unit_of_measurement: '%'

  - platform: template
    sensors:
      master_bath_pir_battery:
        friendly_name: 'Master Bath PIR Battery'
        value_template: '{{ states.binary_sensor.master_bath_pir.attributes.battery_level }}'
        unit_of_measurement: '%'

  - platform: template
    sensors:
      dogs_last_fed_date:
        friendly_name: 'Dogs Last Fed Date'
        value_template: '{{ as_timestamp(states.binary_sensor.dog_food.attributes.timestamp) | timestamp_custom("%A %B %d ",true) }}'

  - platform: template
    sensors:
      dogs_last_fed_time:
        friendly_name: 'Dogs Last Fed Time'
        value_template: '{{ as_timestamp(states.binary_sensor.dog_food.attributes.timestamp) | timestamp_custom("%I:%M %p",true) }}'

  - platform: moon

  - platform: template
    sensors:
      moon_phases:
        friendly_name: 'Moon'
        value_template: '{{ states.sensor.moon.state }}'
        entity_picture_template: >-
          {% if is_state('sensor.moon', 'new_moon') %}
            /local/moonPhases/NNewMoon.jpg
          {% elif is_state('sensor.moon', 'waxing_crescent') %}
            /local/moonPhases/NWaxingCrescent.jpg
          {% elif is_state('sensor.moon', 'first_quarter') %}
            /local/moonPhases/NFirstQuarter.jpg
          {% elif is_state('sensor.moon', 'waxing_gibbous') %}
            /local/moonPhases/NWaxingGibbous.jpg
          {% elif is_state('sensor.moon', 'full_moon') %}
            /local/moonPhases/NFullMoon.jpg
          {% elif is_state('sensor.moon', 'waning_gibbous') %}
            /local/moonPhases/NWaningGibbous.jpg
          {% elif is_state('sensor.moon', 'last_quarter') %}
            /local/moonPhases/NLastQuarter.jpg
          {% elif is_state('sensor.moon', 'waning_crescent') %}
            /local/moonPhases/NWaningCrescent.jpg
          {% endif %}

  # - platform: mqtt
  #   name: Odometer
  #   unit_of_measurement: "mi"
  #   state_topic: ram/state
  #   value_template: '{{ value_json.Odometer | round(0) }}' 

  # - platform: mqtt
  #   name: Fuel Left
  #   unit_of_measurement: "%"
  #   state_topic: ram/state
  #   value_template: '{{ value_json.FuelLeft }}'

  # - platform: mqtt
  #   name: MPG
  #   unit_of_measurement: "mi"
  #   state_topic: ram/state
  #   value_template: '{{ value_json.MPG }}'

  - platform: time_date
    display_options:
      - 'date'
      - 'time'

  - platform: template
    sensors:
      date_html:
        value_template: "{{ as_timestamp(states('sensor.date')) | timestamp_custom('%m/%d/%Y',true) | replace('/','%2F')}}"
  - platform: template
    sensors:
      date_plus_one_html:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 86400) | int | timestamp_custom('%m/%d/%Y',true) | replace('/','%2F')}}"
  - platform: template
    sensors:
      date_plus_two_html:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 172800) | int | timestamp_custom('%m/%d/%Y',true) | replace('/','%2F')}}"
  - platform: template
    sensors:
      date_plus_three_html:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 259200) | int | timestamp_custom('%m/%d/%Y',true) | replace('/','%2F')}}"
  - platform: template
    sensors:
      date_plus_four_html:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 345600) | int | timestamp_custom('%m/%d/%Y',true) | replace('/','%2F')}}"
  - platform: template
    sensors:
      date_plus_five_html:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 432000) | int | timestamp_custom('%m/%d/%Y',true) | replace('/','%2F')}}"

  - platform: template
    sensors:
      my_date:
        value_template: "{{ as_timestamp(states('sensor.date')) | timestamp_custom('%m/%d/%Y',true)}}"
  - platform: template
    sensors:
      date_plus_one:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 86400) | int | timestamp_custom('%m/%d/%Y',true)}}"
  - platform: template
    sensors:
      date_plus_two:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 172800) | int | timestamp_custom('%m/%d/%Y',true)}}"
  - platform: template
    sensors:
      date_plus_three:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 259200) | int | timestamp_custom('%m/%d/%Y',true)}}"
  - platform: template
    sensors:
      date_plus_four:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 345600) | int | timestamp_custom('%m/%d/%Y',true)}}"
  - platform: template
    sensors:
      date_plus_five:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 432000) | int | timestamp_custom('%m/%d/%Y',true)}}"

  - platform: template
    sensors:
      dayoftheweek:
        value_template: "{{ as_timestamp(states('sensor.date')) | timestamp_custom('%A',true)}}"
  - platform: template
    sensors:
      dayoftheweek_plus_one:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 86400) | int | timestamp_custom('%A',true)}}"
  - platform: template
    sensors:
      dayoftheweek_plus_two:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 172800) | int | timestamp_custom('%A',true)}}"
  - platform: template
    sensors:
      dayoftheweek_plus_three:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 259200) | int | timestamp_custom('%A',true)}}"
  - platform: template
    sensors:
      dayoftheweek_plus_four:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 345600) | int | timestamp_custom('%A',true)}}"
  - platform: template
    sensors:
      dayoftheweek_plus_five:
        value_template: "{{ (as_timestamp(strptime(states('sensor.date'),'%Y-%m-%d')) + 432000) | int | timestamp_custom('%A',true)}}"

  - platform: command_line
    name: Twin Oaks Lunch 0
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=3c5166dd-98a2-4e41-9f3c-7fd70e837db9&ServingDate={{states.sensor.date_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: Twin Oaks Lunch 1
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=3c5166dd-98a2-4e41-9f3c-7fd70e837db9&ServingDate={{states.sensor.date_plus_one_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: Twin Oaks Lunch 2
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=3c5166dd-98a2-4e41-9f3c-7fd70e837db9&ServingDate={{states.sensor.date_plus_two_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: Twin Oaks Lunch 3
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=3c5166dd-98a2-4e41-9f3c-7fd70e837db9&ServingDate={{states.sensor.date_plus_three_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: Twin Oaks Lunch 4
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=3c5166dd-98a2-4e41-9f3c-7fd70e837db9&ServingDate={{states.sensor.date_plus_four_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: Twin Oaks Lunch 5
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=3c5166dd-98a2-4e41-9f3c-7fd70e837db9&ServingDate={{states.sensor.date_plus_five_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45

  - platform: command_line
    name: PLHS Lunch 0
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=ef44acd3-63cb-4d3b-828e-80ed1ef89779&ServingDate={{states.sensor.date_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: PLHS Lunch 1
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=ef44acd3-63cb-4d3b-828e-80ed1ef89779&ServingDate={{states.sensor.date_plus_one_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: PLHS Lunch 2
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=ef44acd3-63cb-4d3b-828e-80ed1ef89779&ServingDate={{states.sensor.date_plus_two_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: PLHS Lunch 3
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=ef44acd3-63cb-4d3b-828e-80ed1ef89779&ServingDate={{states.sensor.date_plus_three_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: PLHS Lunch 4
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=ef44acd3-63cb-4d3b-828e-80ed1ef89779&ServingDate={{states.sensor.date_plus_four_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45
  - platform: command_line
    name: PLHS Lunch 5
    command: curl ""'https://webapis.schoolcafe.com/api/CalendarView/GetDailyMenuitems?SchoolId=ef44acd3-63cb-4d3b-828e-80ed1ef89779&ServingDate={{states.sensor.date_plus_five_html.state}}&ServingLine=All%20Lines&MealType=Lunch' | jq -r '.ENTREE//[] | map(.MenuItemDescription) | join(", or ")'""
    scan_interval: 20000
    command_timeout: 45